---
import ThemeToggle from './ThemeToggle.astro';
---

<nav class="fixed left-6 top-1/2 -translate-y-1/2 z-50 hidden md:block">
  <div class="flex flex-col items-center gap-3">
    <a href="/" class="group relative mb-2">
      <div class="relative w-12 h-12 bg-[var(--bg-primary)] rounded-full">
        <div class="absolute -inset-1 rounded-full spinning-border"></div>
        <img
          src="https://github.com/fyzanshaik.png"
          alt="Faizan Shaik"
          class="w-full h-full rounded-full relative z-10 border-2 border-[var(--bg-primary)] bg-[var(--bg-primary)]"
        />
      </div>
    </a>

    <div class="w-px h-6 bg-[var(--border)]"></div>

    <a
      href="/"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Home]
    </a>
    <a
      href="/blog"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Blog]
    </a>
    <a
      href="https://www.linkedin.com/in/fyzanshaik/"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [LinkedIn]
    </a>
    <a
      href="https://github.com/fyzanshaik"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [GitHub]
    </a>
    <a
      href="https://www.x.com/fyzanshaik"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [X]
    </a>
    <a
      href="mailto:fyzanshaik.work@gmail.com"
      id="copy-email-nav"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Email]
    </a>

    <div class="w-px h-6 bg-[var(--border)]"></div>

    <div class="theme-toggle-wrapper">
      <ThemeToggle />
    </div>
  </div>
</nav>

<div class="md:hidden fixed top-4 right-4 z-50">
  <ThemeToggle />
</div>

<!-- Email Copy Notification -->
<div
  id="email-notification"
  class="fixed top-4 right-4 bg-[var(--bg-surface)] border border-[var(--border)] text-[var(--text-primary)] px-4 py-2 rounded-lg shadow-lg z-50 opacity-0 pointer-events-none transition-all duration-300 transform translate-x-full"
>
  <div class="flex items-center gap-2">
    <svg
      class="w-4 h-4 text-[var(--accent)]"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M5 13l4 4L19 7"></path>
    </svg>
    <span class="text-sm font-medium">Email copied!</span>
  </div>
</div>

<script>
  const email = 'fyzanshaik.work@gmail.com';
  const notification = document.getElementById('email-notification');

  function showNotification() {
    if (!notification) return;

    notification.classList.remove('opacity-0', 'translate-x-full');
    notification.classList.add('opacity-100', 'translate-x-0');

    setTimeout(() => {
      if (!notification) return;
      notification.classList.remove('opacity-100', 'translate-x-0');
      notification.classList.add('opacity-0', 'translate-x-full');
    }, 2000);
  }

  async function copyEmail() {
    try {
      await navigator.clipboard.writeText(email);
      showNotification();
    } catch (err) {
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = email;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        document.execCommand('copy');
        showNotification();
      } catch (fallbackErr) {
        console.warn('Could not copy email to clipboard:', fallbackErr);
      }
      document.body.removeChild(textArea);
    }
  }

  // NavBar email button - both open mail client and copy
  document.getElementById('copy-email-nav')?.addEventListener('click', () => {
    // Let the default mailto behavior happen, but also copy
    setTimeout(() => {
      copyEmail();
    }, 100);
  });

  // Footer email link - both open mail client and copy
  document
    .getElementById('copy-email-footer')
    ?.addEventListener('click', () => {
      // Let the default mailto behavior happen, but also copy
      setTimeout(() => {
        copyEmail();
      }, 100);
    });

  // Hero reach out button - both open mail client and copy
  document.getElementById('copy-email-hero')?.addEventListener('click', () => {
    // Let the default mailto behavior happen, but also copy
    setTimeout(() => {
      copyEmail();
    }, 100);
  });
</script>
