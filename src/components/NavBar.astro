---
import ThemeToggle from './ThemeToggle.astro';
interface Props {
  enableLogoAnimation?: boolean;
}
const { enableLogoAnimation = false } = Astro.props;
---

<nav class="fixed left-6 top-1/2 -translate-y-1/2 z-50 hidden md:block">
  <div class="flex flex-col items-center gap-3">
    <a href="/" class="group relative mb-2">
      <div class="relative w-12 h-12 bg-[var(--bg-primary)] rounded-full">
        <div
          class={`absolute -inset-1 rounded-full ${enableLogoAnimation ? 'spinning-border' : ''}`}
        >
        </div>
        <img
          src="https://github.com/fyzanshaik.png"
          alt="Faizan Shaik"
          width="48"
          height="48"
          loading="lazy"
          decoding="async"
          class="w-full h-full rounded-full relative z-10 border-2 border-[var(--bg-primary)] bg-[var(--bg-primary)]"
        />
      </div>
    </a>

    <div class="w-px h-6 bg-[var(--border)]"></div>

    <a
      href="/"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Home]
    </a>
    <a
      href="/blog"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Blog]
    </a>
    <a
      href="https://www.linkedin.com/in/fyzanshaik/"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [LinkedIn]
    </a>
    <a
      href="https://github.com/fyzanshaik"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [GitHub]
    </a>
    <a
      href="https://www.x.com/fyzanshaik"
      target="_blank"
      rel="noopener noreferrer"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [X]
    </a>
    <a
      href="mailto:fyzanshaik.work@gmail.com"
      id="copy-email-nav"
      class="nav-link text-xs px-3 py-1.5 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all space-mono-regular"
    >
      [Email]
    </a>

    <div class="w-px h-6 bg-[var(--border)]"></div>

    <div class="theme-toggle-wrapper">
      <ThemeToggle />
    </div>

    <button
      id="sound-toggle"
      aria-label="Toggle sound"
      class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
    >
      <svg
        id="sound-icon-on"
        class="w-5 h-5 hidden"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"
        ></path>
      </svg>
      <svg
        id="sound-icon-off"
        class="w-5 h-5 hidden"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        viewBox="0 0 24 24"
      >
        <path
          d="M6.857 3.5H4a2 2 0 00-2 2v12a2 2 0 002 2h2.857M9 5v14l4-3h6a2 2 0 002-2V8a2 2 0 00-2-2h-6l-4-3z"
        ></path>
        <line
          x1="3"
          y1="3"
          x2="21"
          y2="21"
          stroke-linecap="round"
          stroke-linejoin="round"></line>
      </svg>
    </button>
  </div>
</nav>

<div class="md:hidden fixed top-4 right-4 z-50 flex items-center gap-2">
  <button
    id="mobile-sound-toggle"
    aria-label="Toggle sound"
    class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
  >
    <svg
      id="mobile-sound-icon-on"
      class="w-5 h-5 hidden"
      fill="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"
      ></path>
    </svg>
    <svg
      id="mobile-sound-icon-off"
      class="w-5 h-5 hidden"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      viewBox="0 0 24 24"
    >
      <path
        d="M6.857 3.5H4a2 2 0 00-2 2v12a2 2 0 002 2h2.857M9 5v14l4-3h6a2 2 0 002-2V8a2 2 0 00-2-2h-6l-4-3z"
      ></path>
      <line
        x1="3"
        y1="3"
        x2="21"
        y2="21"
        stroke-linecap="round"
        stroke-linejoin="round"></line>
    </svg>
  </button>
  <button
    id="mobile-top-theme-toggle"
    aria-label="Toggle theme"
    class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
  >
    <svg
      id="mobile-top-theme-icon-light"
      class="w-5 h-5 hidden"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
      ></path>
    </svg>
    <svg
      id="mobile-top-theme-icon-dark"
      class="w-5 h-5 hidden"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
      ></path>
    </svg>
  </button>
  <button
    id="mobile-menu-toggle"
    aria-label="Toggle menu"
    class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
  >
    <svg
      id="menu-icon"
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
    <svg
      id="close-icon"
      class="w-6 h-6 hidden"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M6 18L18 6M6 6l12 12"></path>
    </svg>
  </button>
</div>

<div
  id="mobile-menu"
  class="fixed inset-0 bg-black/50 backdrop-blur-sm z-40 md:hidden opacity-0 pointer-events-none transition-opacity duration-300"
>
  <div
    id="mobile-menu-content"
    class="fixed left-0 top-0 h-full w-64 bg-[var(--bg-primary)] border-r border-[var(--border)] transform -translate-x-full transition-transform duration-300 overflow-y-auto"
  >
    <div class="flex flex-col p-6 space-y-4">
      <div class="flex items-center justify-between mb-4">
        <h2 class="text-lg font-bold text-[var(--text-primary)]">Menu</h2>
        <button
          id="mobile-menu-close"
          aria-label="Close menu"
          class="p-1 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <a
        href="/"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [Home]
      </a>
      <a
        href="/blog"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [Blog]
      </a>
      <a
        href="https://www.linkedin.com/in/fyzanshaik/"
        target="_blank"
        rel="noopener noreferrer"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [LinkedIn]
      </a>
      <a
        href="https://github.com/fyzanshaik"
        target="_blank"
        rel="noopener noreferrer"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [GitHub]
      </a>
      <a
        href="https://www.x.com/fyzanshaik"
        target="_blank"
        rel="noopener noreferrer"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [X]
      </a>
      <a
        href="mailto:fyzanshaik.work@gmail.com"
        id="copy-email-mobile"
        class="nav-link text-sm px-3 py-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] transition-all space-mono-regular"
      >
        [Email]
      </a>

      <div class="h-px bg-[var(--border)] my-2"></div>

      <div class="flex items-center justify-between gap-2">
        <span class="text-xs text-[var(--text-secondary)] font-medium"
          >Theme</span
        >
        <button
          id="mobile-menu-theme-toggle"
          aria-label="Toggle theme"
          class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
        >
          <svg
            id="mobile-menu-theme-icon-light"
            class="w-5 h-5 hidden"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
            ></path>
          </svg>
          <svg
            id="mobile-menu-theme-icon-dark"
            class="w-5 h-5 hidden"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
            ></path>
          </svg>
        </button>
      </div>

      <div class="flex items-center justify-between gap-2">
        <span class="text-xs text-[var(--text-secondary)] font-medium"
          >Sound</span
        >
        <button
          id="mobile-menu-sound-toggle"
          aria-label="Toggle sound"
          class="p-2 rounded-md text-[var(--text-secondary)] hover:text-[var(--accent)] hover:bg-[var(--bg-surface)] hover:border hover:border-[var(--border)] transition-all"
        >
          <svg
            id="mobile-menu-sound-icon-on"
            class="w-5 h-5 hidden"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"
            ></path>
          </svg>
          <svg
            id="mobile-menu-sound-icon-off"
            class="w-5 h-5 hidden"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
          >
            <path
              d="M6.857 3.5H4a2 2 0 00-2 2v12a2 2 0 002 2h2.857M9 5v14l4-3h6a2 2 0 002-2V8a2 2 0 00-2-2h-6l-4-3z"
            ></path>
            <line
              x1="3"
              y1="3"
              x2="21"
              y2="21"
              stroke-linecap="round"
              stroke-linejoin="round"></line>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Email Copy Notification -->
<div
  id="email-notification"
  class="fixed top-4 right-4 bg-[var(--bg-surface)] border border-[var(--border)] text-[var(--text-primary)] px-4 py-2 rounded-lg shadow-lg z-50 opacity-0 pointer-events-none transition-all duration-300 transform translate-x-full"
>
  <div class="flex items-center gap-2">
    <svg
      class="w-4 h-4 text-[var(--accent)]"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M5 13l4 4L19 7"></path>
    </svg>
    <span class="text-sm font-medium">Email copied!</span>
  </div>
</div>

<script>
  const email = 'fyzanshaik.work@gmail.com';
  const notification = document.getElementById('email-notification');

  function showNotification() {
    if (!notification) return;

    notification.classList.remove('opacity-0', 'translate-x-full');
    notification.classList.add('opacity-100', 'translate-x-0');

    setTimeout(() => {
      if (!notification) return;
      notification.classList.remove('opacity-100', 'translate-x-0');
      notification.classList.add('opacity-0', 'translate-x-full');
    }, 2000);
  }

  async function copyEmail() {
    try {
      await navigator.clipboard.writeText(email);
      showNotification();
    } catch (err) {
      const textArea = document.createElement('textarea');
      textArea.value = email;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        document.execCommand('copy');
        showNotification();
      } catch (fallbackErr) {
        console.warn('Could not copy email to clipboard:', fallbackErr);
      }
      document.body.removeChild(textArea);
    }
  }

  document.getElementById('copy-email-nav')?.addEventListener('click', () => {
    setTimeout(() => {
      copyEmail();
    }, 100);
  });

  document
    .getElementById('copy-email-footer')
    ?.addEventListener('click', () => {
      setTimeout(() => {
        copyEmail();
      }, 100);
    });

  document.getElementById('copy-email-hero')?.addEventListener('click', () => {
    setTimeout(() => {
      copyEmail();
    }, 100);
  });

  document
    .getElementById('copy-email-mobile')
    ?.addEventListener('click', () => {
      setTimeout(() => {
        copyEmail();
      }, 100);
      document.getElementById('mobile-menu')?.click();
    });

  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuContent = document.getElementById('mobile-menu-content');
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  function toggleMobileMenu() {
    const isOpen = mobileMenu?.classList.contains('opacity-100');
    if (isOpen) {
      mobileMenu?.classList.remove('opacity-100', 'pointer-events-auto');
      mobileMenu?.classList.add('opacity-0', 'pointer-events-none');
      mobileMenuContent?.classList.add('-translate-x-full');
      mobileMenuContent?.classList.remove('translate-x-0');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    } else {
      mobileMenu?.classList.remove('opacity-0', 'pointer-events-none');
      mobileMenu?.classList.add('opacity-100', 'pointer-events-auto');
      mobileMenuContent?.classList.remove('-translate-x-full');
      mobileMenuContent?.classList.add('translate-x-0');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
    }
  }

  mobileMenuToggle?.addEventListener('click', toggleMobileMenu);
  mobileMenuClose?.addEventListener('click', toggleMobileMenu);
  mobileMenu?.addEventListener('click', e => {
    if (e.target === mobileMenu) {
      toggleMobileMenu();
    }
  });

  document.querySelectorAll('#mobile-menu-content a').forEach(link => {
    link.addEventListener('click', () => {
      toggleMobileMenu();
    });
  });

  function setupSoundToggle(
    soundToggleId: string,
    soundOnIconId: string,
    soundOffIconId: string
  ) {
    const soundToggle = document.getElementById(soundToggleId);
    const soundOnIcon = document.getElementById(soundOnIconId);
    const soundOffIcon = document.getElementById(soundOffIconId);

    function updateSoundIcon() {
      const isMuted = (window as any).AudioUX?.isMuted?.();
      if (isMuted) {
        soundOnIcon?.classList.add('hidden');
        soundOffIcon?.classList.remove('hidden');
      } else {
        soundOnIcon?.classList.remove('hidden');
        soundOffIcon?.classList.add('hidden');
      }
    }

    soundToggle?.addEventListener('click', () => {
      const isMuted = (window as any).AudioUX?.isMuted?.();
      if (isMuted) {
        (window as any).AudioUX?.unmute?.();
      } else {
        (window as any).AudioUX?.mute?.();
      }
      setTimeout(updateSoundIcon, 0);
    });

    setTimeout(updateSoundIcon, 100);
  }

  setupSoundToggle('sound-toggle', 'sound-icon-on', 'sound-icon-off');
  setupSoundToggle(
    'mobile-sound-toggle',
    'mobile-sound-icon-on',
    'mobile-sound-icon-off'
  );
  setupSoundToggle(
    'mobile-menu-sound-toggle',
    'mobile-menu-sound-icon-on',
    'mobile-menu-sound-icon-off'
  );

  const mobileMenuThemeToggle = document.getElementById(
    'mobile-menu-theme-toggle'
  );
  const mobileMenuThemeIconLight = document.getElementById(
    'mobile-menu-theme-icon-light'
  );
  const mobileMenuThemeIconDark = document.getElementById(
    'mobile-menu-theme-icon-dark'
  );

  function updateMobileMenuThemeIcon() {
    const isDark = document.documentElement.classList.contains('dark');
    if (isDark) {
      mobileMenuThemeIconLight?.classList.remove('hidden');
      mobileMenuThemeIconDark?.classList.add('hidden');
    } else {
      mobileMenuThemeIconLight?.classList.add('hidden');
      mobileMenuThemeIconDark?.classList.remove('hidden');
    }
  }

  mobileMenuThemeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
    updateMobileMenuThemeIcon();
  });

  updateMobileMenuThemeIcon();

  const mobileTopThemeToggle = document.getElementById(
    'mobile-top-theme-toggle'
  );
  const mobileTopThemeIconLight = document.getElementById(
    'mobile-top-theme-icon-light'
  );
  const mobileTopThemeIconDark = document.getElementById(
    'mobile-top-theme-icon-dark'
  );

  function updateMobileTopThemeIcon() {
    const isDark = document.documentElement.classList.contains('dark');
    if (isDark) {
      mobileTopThemeIconLight?.classList.remove('hidden');
      mobileTopThemeIconDark?.classList.add('hidden');
    } else {
      mobileTopThemeIconLight?.classList.add('hidden');
      mobileTopThemeIconDark?.classList.remove('hidden');
    }
  }

  mobileTopThemeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
    updateMobileTopThemeIcon();
    updateMobileMenuThemeIcon();
  });

  updateMobileTopThemeIcon();
</script>
